!SESSION 2023-12-06 17:45:39.750 -----------------------------------------------
eclipse.buildId=unknown
java.version=17.0.5
java.vendor=GraalVM Community
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Framework arguments:  --add-modules=ALL-SYSTEM --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED
Command-line arguments:  --add-modules=ALL-SYSTEM --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED -data /home/runner/RedesEP1/.cache/jdt-language-server/data/home/runner/RedesEP1

This is a continuation of log file /home/runner/RedesEP1/.cache/jdt-language-server/data/home/runner/RedesEP1/.metadata/.bak_4.log
Created Time: 2023-12-06 18:26:31.416

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:31.417
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:31.461
!MESSAGE Validated 4. Took 3233 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:31.819
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:31.906
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:31.953
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:31.956
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.003
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.142
!MESSAGE Reconciled 1. Took 42 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.169
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.177
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.198
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.212
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.229
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.295
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.349
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.366
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:32.421
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("MensaJogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:32.438
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:32.442
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.469
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.492
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.493
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.589
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.697
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.725
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:32.792
!MESSAGE Reconciled 1. Took 29 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:34.642
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:34.648
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:34.727
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:34.745
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:35.063
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:35.066
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:35.067
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:35.572
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:35.625
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:35.702
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:36.180
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:36.244
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:36.397
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:36.400
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:36.401
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:36.402
!MESSAGE Validated 4. Took 3205 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:36.837
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:36.929
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:36.981
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:37.074
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:37.796
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:37.830
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:37.830
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:38.874
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:39.057
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:39.109
!MESSAGE Reconciled 1. Took 130 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:39.453
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:39.612
!MESSAGE Reconciled 1. Took 45 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:39.816
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ".");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:39.875
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:39.967
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:40.383
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:40.934
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:40.965
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:41.964
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:42.000
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:44.180
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:44.529
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:46.768
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + "");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:46.780
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:46.797
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:46.803
!MESSAGE Validated 4. Took 6783 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:46.812
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:46.818
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:46.823
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.041
!MESSAGE Reconciled 1. Took 72 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:47.265
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual + ":");

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:47.270
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:47.272
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.280
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.287
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.292
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.295
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.401
!MESSAGE Reconciled 1. Took 18 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.571
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.624
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.758
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:47.946
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.061
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.110
!MESSAGE Reconciled 1. Took 330 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.204
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.218
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.492
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.537
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.593
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:48.608
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" +);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:48.610
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:48.611
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.683
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:48.699
!MESSAGE Reconciled 1. Took 3 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:48.971
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mens);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:48.994
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:49.089
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:49.237
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:49.466
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:49.467
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:49.837
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:49.837
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:51.078
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:51.123
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:51.797
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mens);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:51.805
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:51.806
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:51.806
!MESSAGE Validated 4. Took 2662 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:51.810
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:52.133
!MESSAGE Reconciled 1. Took 237 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:53.398
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:53.471
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:54.207
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:54.229
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:55.115
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:55.179
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:55.784
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:55.811
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:56.165
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensa);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:56.233
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:56.253
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:56.292
!MESSAGE Validated 4. Took 3678 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:56.297
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:56.343
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:56.423
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:56.498
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:56.533
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:56.567
!MESSAGE Reconciled 1. Took 18 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:56.848
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:56.900
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:56.955
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:57.066
!MESSAGE >> document/resolveCompletionItem

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:57.517
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:57.518
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:57.519
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:57.520
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:57.524
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:58.280
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:58.337
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:58.488
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:58.548
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:58.672
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:58.713
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:58.742
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:58.771
!MESSAGE Validated 4. Took 1800 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:26:58.944
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:26:59.246
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:26:59.258
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:26:59.260
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:01.952
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:03.203
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:03.588
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta.");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:03.603
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:03.622
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:05.173
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:05.381
!MESSAGE Reconciled 1. Took 119 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:06.609
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:06.610
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:06.665
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:06.770
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:06.775
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.172
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.205
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.610
!MESSAGE begin problem for /PalavreadoServidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.634
!MESSAGE 2 problems reported for /PalavreadoServidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.644
!MESSAGE Validated 4. Took 1762 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.647
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.806
!MESSAGE Reconciled 1. Took 31 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.945
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:07.971
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:08.111
!MESSAGE Reconciled 1. Took 73 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:08.384
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta"+ ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:08.386
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:08.451
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:08.648
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:08.655
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:09.285
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:09.891
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:09.910
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:11.177
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:11.212
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:11.717
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:11.747
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:11.991
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta"+ ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:11.992
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:11.992
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:11.993
!MESSAGE Validated 4. Took 3473 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.077
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.093
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.096
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.097
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.139
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.219
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.245
!MESSAGE Reconciled 1. Took 16 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.256
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:12.507
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta" + + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:12.530
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:12.531
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.577
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.626
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.699
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.809
!MESSAGE Reconciled 1. Took 50 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.842
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.880
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:12.922
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:13.036
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:13.158
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:13.230
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:13.544
!MESSAGE Reconciled 1. Took 148 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:15.127
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:15.131
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:15.157
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:15.158
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:15.862
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:15.902
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.234
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.234
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:16.412
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta" + palav + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:16.419
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:16.432
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.436
!MESSAGE Validated 4. Took 2344 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.452
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.474
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.492
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.551
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.610
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:16.719
!MESSAGE Reconciled 1. Took 27 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:17.202
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta" + palavraOcu + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:17.311
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:17.360
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:17.436
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:17.551
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:17.552
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:18.348
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:18.350
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:18.746
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:18.759
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:19.600
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta" + palavraOcu + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:19.636
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:19.671
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:19.672
!MESSAGE Validated 4. Took 2283 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:19.700
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:19.710
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:19.797
!MESSAGE >> document/resolveCompletionItem

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:19.889
!MESSAGE Reconciled 1. Took 75 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:19.942
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:19.974
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:20.656
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta" + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:20.675
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:20.676
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:20.804
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:20.991
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:21.207
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta" + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:21.272
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:21.299
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:21.303
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:21.402
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:21.407
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:21.591
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:21.594
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:21.723
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:21.728
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:22.367
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta" + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:22.602
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:22.602
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:22.603
!MESSAGE Validated 4. Took 1885 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:22.948
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:22.952
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:23.030
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:23.140
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:23.202
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:23.610
!MESSAGE Reconciled 1. Took 550 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:23.939
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:23.962
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:23.962
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:24.507
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:24.580
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:24.581
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:24.851
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:24.917
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:25.148
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:25.452
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:25.466
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:25.983
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:25.984
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:26.447
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:26.481
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:26.493
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:26.498
!MESSAGE Validated 4. Took 2432 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:26.590
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:26.609
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:26.776
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:26.911
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:27.940
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:27.943
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:27.945
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:36.488
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:36.941
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:36.942
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:36.947
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:37.861
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:38.219
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:38.831
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:38.843
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:38.844
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:48.698
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:48.859
!MESSAGE Reconciled 1. Took 65 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:49.001
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:49.156
!MESSAGE Reconciled 1. Took 55 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:49.754
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:50.658
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:50.696
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:50.802
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:50.803
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:50.867
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:51.024
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:51.531
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:52.264
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:52.265
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:52.742
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:52.751
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:53.250
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:53.414
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:53.439
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:53.474
!MESSAGE Validated 4. Took 3912 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:53.590
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:53.592
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:53.593
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:53.600
!MESSAGE >> document/definition

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:53.901
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:54.160
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:54.164
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:54.169
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:54.425
!MESSAGE Reconciled 1. Took 76 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:54.538
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:54.589
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:54.642
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:54.921
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:54.932
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:54.948
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:55.494
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:55.818
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:55.825
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:57.323
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:57.387
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:58.090
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:58.091
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:58.766
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:58.768
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:58.771
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:58.771
!MESSAGE Validated 4. Took 3944 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:58.774
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:58.787
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:58.875
!MESSAGE Reconciled 1. Took 10 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:58.921
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:58.927
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:58.928
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:27:59.228
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:27:59.942
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:27:59.969
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:27:59.974
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:00.846
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:00.849
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:00.881
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:00.883
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:00.971
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:00.971
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:28:00.990
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemA);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:28:00.991
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:28:01.004
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.006
!MESSAGE Validated 4. Took 1710 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.008
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.110
!MESSAGE Reconciled 1. Took 9 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:28:01.131
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagem);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:28:01.134
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:28:01.135
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.139
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.141
!MESSAGE >> document/completion

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.244
!MESSAGE Reconciled 1. Took 11 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.686
!MESSAGE Completion request completed

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:01.783
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:02.191
!MESSAGE >> document/resolveCompletionItem

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:02.571
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:02.720
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:02.723
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:04.089
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:04.091
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:04.509
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:04.510
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:28:04.807
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:28:04.819
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:28:04.929
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:04.974
!MESSAGE Validated 4. Took 3295 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:28:05.369
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:28:05.445
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:28:05.462
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:28:05.772
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:28:05.779
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:28:05.780
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:28:35.462
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:38.480
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:44.027
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:44.086
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:44.151
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:44.154
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:44.862
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:45.699
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:32:45.904
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:32:45.905
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:32:45.906
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:47.213
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:48.191
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:32:48.376
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:32:48.378
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:32:48.378
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:49.568
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:32:49.794
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:32:49.796
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:32:49.797
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:53.628
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:53.786
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:54.530
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:55.560
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:55.576
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:57.228
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:32:59.854
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.117
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.203
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.356
!MESSAGE Reconciled 1. Took 3 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:33:00.360
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:33:00.365
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:33:00.372
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.658
!MESSAGE >> document/definition

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.866
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.867
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.968
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.971
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.994
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:00.995
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:33:01.075
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual), "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:33:01.077
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:33:01.079
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.080
!MESSAGE Validated 4. Took 320 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.152
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.297
!MESSAGE Reconciled 1. Took 4 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.554
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.738
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.738
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.757
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.758
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.787
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.787
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:33:01.791
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:33:01.798
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:33:01.801
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:33:01.865
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:33:01.867
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:33:01.868
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:01.870
!MESSAGE Validated 4. Took 170 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:03.066
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:33:03.304
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:33:03.308
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:33:03.310
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:33:03.773
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:33:03.793
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:33:03.795
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:33:03.796
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:27.063
!MESSAGE >> document/hover

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:32.029
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:34:32.233
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
      System.out.println("Mensagem do Jogador " + numOutroJogador(jogadorAtual) + ":" + mensagemB);

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:34:32.235
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:34:32.235
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:32.936
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.052
!MESSAGE Reconciled 1. Took 24 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.148
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.298
!MESSAGE Reconciled 1. Took 6 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.340
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.429
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.447
!MESSAGE Reconciled 1. Took 10 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:34:33.647
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));
  

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:34:33.649
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:34:33.662
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.704
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:33.848
!MESSAGE Reconciled 1. Took 2 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.060
!MESSAGE >> document/didChange

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.156
!MESSAGE Reconciled 1. Took 4 ms

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.582
!MESSAGE begin problem for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.582
!MESSAGE 1 problems reported for /PalavreadoCliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.655
!MESSAGE begin problem for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.661
!MESSAGE 1 problems reported for /Servidor.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.676
!MESSAGE begin problem for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.676
!MESSAGE 1 problems reported for /Cliente.java

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.678
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:34:34.754
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:34:34.755
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:34:34.756
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.publishDiagnostics(BaseDocumentLifeCycleHandler.java:242)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$2.runInWorkspace(BaseDocumentLifeCycleHandler.java:117)
	at org.eclipse.core.internal.resources.InternalWorkspaceJob.run(InternalWorkspaceJob.java:42)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:34.756
!MESSAGE Validated 4. Took 196 ms

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:34:34.962
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:34:34.986
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:34:34.990
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:36.299
!MESSAGE >> document/codeAction

!ENTRY org.eclipse.jdt.ls.core 1 0 2023-12-06 18:34:36.469
!MESSAGE >> document/didSave

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:34:36.494
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-12-06 18:34:36.502
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-12-06 18:34:36.505
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.checkPackageDeclaration(BaseDocumentLifeCycleHandler.java:514)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.handleSaved(BaseDocumentLifeCycleHandler.java:491)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler$7.run(BaseDocumentLifeCycleHandler.java:340)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2315)
	at org.eclipse.core.internal.resources.Workspace.run(Workspace.java:2340)
	at org.eclipse.jdt.ls.core.internal.handlers.BaseDocumentLifeCycleHandler.didSave(BaseDocumentLifeCycleHandler.java:337)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.didSave(JDTLanguageServer.java:794)
	at jdk.internal.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$null$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:152)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:220)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:187)
	at org.eclipse.jdt.ls.core.internal.ParentProcessWatcher.lambda$0(ParentProcessWatcher.java:123)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:194)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:94)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:113)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

!ENTRY org.eclipse.jdt.core 4 4 2023-12-06 18:34:36.559
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class PalavreadoServidor {
  private Servidor servidor;
  private static String palavraOculta; // Palavra a ser adivinhada
  private static int tamanhoPalavra; // Tamanho da palavra a ser adivinhada
  private static int maxTentativas; // Número máximo de tentativas

  public PalavreadoServidor() {
    palavraOculta = geraPalavraOculta();
    tamanhoPalavra = palavraOculta.length();
    maxTentativas = tamanhoPalavra + 1;
    servidor = new Servidor(31384, 2);
  }

  public static void main(String[] args) {
      PalavreadoServidor jogo = new PalavreadoServidor();
    jogo.run();
  }

  public void run() {
    servidor.aceitarConexaoCliente(0);
    servidor.aceitarConexaoCliente(1);
    servidor.enviarMensagem(0, "I " + tamanhoPalavra + " " + maxTentativas);
    servidor.enviarMensagem(1, "I " + tamanhoPalavra + " " + maxTentativas);

    int tentativasRestantes = maxTentativas; // Numero de tentativas dos dois jogadores juntos
    int jogadorAtual = 0;
    String tentativa = "";
    boolean desistiu = false;
    String mensagemA, mensagemB;
    String[] parametros;

    while (tentativasRestantes > 0 && desistiu == false) {
      // Informa ao outro jogador que nao eh a vez dele
      servidor.enviarMensagem(numOutroJogador(jogadorAtual), "V 0");

      // Infoma o jogador atual que eh vez dele
      servidor.enviarMensagem(jogadorAtual, "V 1");
      System.out.println("Vez do jogador " + jogadorAtual + ".");
      // Informa quantas tentativas restam
      servidor.enviarMensagem(jogadorAtual, "N " + tentativasRestantes);
      System.out.println("Restam " + tentativasRestantes + " para o jogador " + jogadorAtual + ".");
      // Requere que o jogador digite sua tentativa
      servidor.enviarMensagem(jogadorAtual, "D");
      System.out.println("Recebendo tentativa do jogador " + jogadorAtual + ".");
      // Recebe a tentativa
      mensagemA = servidor.receberMensagem(jogadorAtual);

      // Da a chance do jogador desistir do jogo
      mensagemB = servidor.receberMensagem(numOutroJogador(jogadorAtual));

      if (mensagemB.equals("E")) {
        desistiu = true;
        System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
        servidor.enviarMensagem(jogadorAtual, "Q");
        break;
      } else {

        if (mensagemA.equals("E")) {
          desistiu = true;
          System.out.println("Jogador " + numOutroJogador(jogadorAtual) + " desistiu do jogo.");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
          break;
        } else {
          parametros = mensagemA.split(" ");
          if (parametros[0].equals("T")) {
            tentativa = parametros[1].toLowerCase();

            System.out.println("Jogador " + jogadorAtual + " digitou " + tentativa + ".");
          }
        }

        // Valida a tentativa do jogador
        while (tentativa.length() != tamanhoPalavra) {
           System.out.println("A tentativa do jogador foi inválida. Aguardando nova tentativa.");
          // Informa que o numero de letras esta errado e qual o tamanho correto
          servidor.enviarMensagem(jogadorAtual, "S " + tamanhoPalavra);
          // Requere mais uma tentativa
          servidor.enviarMensagem(jogadorAtual, "D");
          // Recebe a tentativa
          mensagemA = servidor.receberMensagem(jogadorAtual);
          System.out.println("Mensagem do Jogador " + jogadorAtual + ":" + mensagemA);

          if (mensagemA.equals("E")) {
            desistiu = true;
            servidor.enviarMensagem(numOutroJogador(jogadorAtual), "Q");
            System.out.println("Jogador " + jogadorAtual + " desistiu do jogo.");
            break;
          } else {
            parametros = mensagemA.split(" ");
            if (parametros[0].equals("T")) {
              tentativa = parametros[1].toLowerCase();
            }
          }
        }
        System.out.println("Tentativa do " + jogadorAtual + " é valida.");

        // Verifica se a tentativa está correta
        if (tentativa.equals(palavraOculta)) {
          servidor.enviarMensagem(jogadorAtual, "F " + tentativa.toUpperCase());
          servidor.enviarMensagem(jogadorAtual, "RG");
          servidor.enviarMensagem(numOutroJogador(jogadorAtual), "RP " + palavraOculta);
          System.out.println("O jogador " + jogadorAtual + " acertou a palavra oculta: " + palavraOculta + ".");
          break;
        } else {
          // Enviando o feedback da tentativa
          servidor.enviarMensagem(jogadorAtual, "F " + exibirTentativa(tentativa));

          if (jogadorAtual == 1)
            tentativasRestantes--;
          jogadorAtual = numOutroJogador(jogadorAtual);
        }
      }

      // Mostra a palavra correta se o jogador perdeu
      if (tentativasRestantes == 0) {
        System.out.println("O jogador " + jogadorAtual + "perdeu. Mostrando a palavra correta: " + );
        se + "."idor.enviarMensagem(0, "RA " + palavraOculta);
        servidor.enviarMensagem(1, "RA " + palavraOculta);
      }
    }
  }

  private static String exibirTentativa(String tentativa) {
    String retorno = "";

    for (int i = 0; i < tamanhoPalavra; i++) {
      if (palavraOculta.charAt(i) == tentativa.charAt(i)) {
        retorno += tentativa.toUpperCase().charAt(i);

      } else if (palavraOculta.toLowerCase().contains(String.valueOf(tentativa.toLowerCase().charAt(i)))) {
        retorno += tentativa.toLowerCase().charAt(i);
      } else {
        retorno += "_";
      }
    }
    return retorno;
  }

  public String geraPalavraOculta() {
    String[] palavras = { "samyra", "mona", "pinterest", "tumblr", "foca", "lhama", "mone", "mono", "trupicao", "sacos",
        "mycos", "marra", "almondega", "sobremosa", "amogas", "apaurers", "querida", "antiquerido" };
    Random random = new Random();
    return palavras[random.nextInt(palavras.length)];
  }

  // Funcao que quando recebe 1 retorna 0, e quando recebe 0 retorna 1
  public static int numOutroJogador(int n) {
    return ((n + 1) % 2);
  }
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3853)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3095)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2243)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3037)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3013)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3504)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3087)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3390)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1271)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getASTRoot(CodeActionHandler.java:330)
	at org.eclipse.jdt.ls.core.internal.handlers.CodeActionHandler.getCodeActionCommands(CodeActionHandler.java:125)
	at org.eclipse.jdt.ls.core.internal.handlers.JDTLanguageServer.lambda$15(JDTLanguageServer.java:648)
	at org.eclipse.jdt.ls.core.internal.BaseJDTLanguageServer.lambda$0(BaseJDTLanguageServer.java:75)
	at java.base/java.util.concurrent.CompletableFuture$UniApply.tryFire(CompletableFuture.java:646)
	at java.base/java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:482)
	at java.base/java.lang.Thread.run(Thread.java:833)
